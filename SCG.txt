SimpleCodeGenerator() {

public interface SimpleCodeGenerator {
	public ASMCodeFragment generate(ParseNode n, Lextant operator, List<ASMCodeFragment> …childrenCode) {
		
	}
}

}

i.e.. new FunctionSignature(new SimpleCodeGenerator(LESS_THAN, FLOAT), FLOAT, FLOAT, BOOLEAN);


————————————————————————————————————————————————————————————————————————
Assignment 2: loops, conditionals, “short-circuit” operators (&&)
————————————————————————————————————————————————————————————————————————

— && operator —

arg1 && arg2

eval arg1, if arg1 = true, return eval arg2

ie. if ((x instanceOf Farm) && ((Farm)x).barn.color == “red”)) { … }

	Arg1
	Jump 	returnFalse
	Arg2
	Jump 	join
label	returnFalse
	PushI	0
Label	join
	PushI	?